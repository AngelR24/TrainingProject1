@model MVCProject2.Models.User
@{
    ViewData["Title"] = "Create";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
<script src="https://knockoutjs.com/downloads/knockout-3.5.1.js"></script>
<div class="text-center">
    <h1 class="display-4">Welcome to the registration!</h1>
        <form class="p-2">
            <div class="form-group">
                <label for="firstNameInput">First Name:</label>
                <input id="firstNameInput" class="form-control" data-bind="value: FirstName" />
            </div>
            <div class="form-group">
                <label for="LastNameInput">Last Name:</label>
                <input id="LastNameInput" class="form-control" data-bind="value: LastName" />
            </div>
            <button type="button" class="btn btn-primary" data-bind="click: addUser">Submit</button>
        </form>
        <h1 >Welcome person by the name of: </h1>
        <h1 data-bind="text: FullName"></h1>
</div>

<script>
    function UserViewModel() {
        var self = this;
        self.FirstName = ko.observable();
        self.LastName = ko.observable();
        self.FullName = ko.computed(function(){
            return (self.FirstName() || "") + " " + (self.LastName() || "");
        });
        self.addUser = function(){
            const data = { FirstName: self.FirstName(), LastName: self.LastName()};
            const url = 'https://localhost:7039/Users/Create';
            const headers = new Headers();
            headers.append('Content-Type', 'application/json');
            const options = {
              method: 'POST',
              headers: headers,
              body: JSON.stringify(data),
            };
            const something = fetch(url, options)
              .then(response => {
                if (!response.ok) {
                  throw new Error('Network response was not ok');
                }
                return response.json();
              })
              .then(data => {
                console.log(data);
              })
              .catch(error => {
                console.error('Error:', error);
              });
            }
    }
    ko.applyBindings(new UserViewModel());
</script>
